<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorFormLookupControlFail" xml:space="preserve">
    <value>Form not passed with the lookup control. This will cause a memory leak.</value>
  </data>
  <data name="ErrorParametersNull" xml:space="preserve">
    <value>Parameters cannot be null.</value>
  </data>
  <data name="ErrorGetLookupText" xml:space="preserve">
    <value>Failed getting lookup text for lookup: {0}</value>
  </data>
  <data name="ErrorUnknownLookupType" xml:space="preserve">
    <value>Unknown lookup type</value>
  </data>
  <data name="ErrorNoSuchColumn" xml:space="preserve">
    <value>Filter specified but current lookup list does not contain such a column.</value>
  </data>
  <data name="ErrorUpdateRunning" xml:space="preserve">
    <value>Update is already running. Cannot start update.</value>
  </data>
  <data name="ErrorUpdateFailed" xml:space="preserve">
    <value>Update failed.</value>
  </data>
  <data name="ErrorUnsupportedActivityType" xml:space="preserve">
    <value>Activity type not supported by the deployment service.</value>
  </data>
  <data name="ErrorUnsupportedTarget" xml:space="preserve">
    <value>Target location not supported by the deployment service.</value>
  </data>
  <data name="ErrorNoDataServiceNoDocsService" xml:space="preserve">
    <value>Data service not loaded! Cannot load the Documentation Service.</value>
  </data>
  <data name="ErrorParamNotFound" xml:space="preserve">
    <value>Data constant/parameter not found.</value>
  </data>
  <data name="ErrorConstantNotFound" xml:space="preserve">
    <value>Constant not found.</value>
  </data>
  <data name="ErrorModelNotLoaded" xml:space="preserve">
    <value>Model not loaded.</value>
  </data>
  <data name="ErrorFeatureNotFound" xml:space="preserve">
    <value>Requested feature not found in the current model.</value>
  </data>
  <data name="ErrorFeatureListFailed" xml:space="preserve">
    <value>Could not load feature list.</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading {0}...</value>
  </data>
  <data name="ErrorTooMuchExtensions" xml:space="preserve">
    <value>Maximum number of loaded extensions in one step exceeded.</value>
  </data>
  <data name="ErrorSchemaListFailed" xml:space="preserve">
    <value>Could not load schema list, check configuration file.
{0}</value>
  </data>
  <data name="ErrorRepositoryUpdateFailed" xml:space="preserve">
    <value>Repository update failed.{0}</value>
  </data>
  <data name="ErrorWhenUpdateScript" xml:space="preserve">
    <value>Error occured while running update script '{0}'{1}</value>
  </data>
  <data name="ErrorSettingsNotFound" xml:space="preserve">
    <value>OrigamSettings not found.</value>
  </data>
  <data name="ErrorUnknownService" xml:space="preserve">
    <value>Unknown service</value>
  </data>
  <data name="ErrorPackageLoadFailed" xml:space="preserve">
    <value>Cannot load package. The package does not exist in this model.</value>
  </data>
  <data name="ErrorStringNotFound" xml:space="preserve">
    <value>String not found.</value>
  </data>
  <data name="ErrorDifferentPackage" xml:space="preserve">
    <value>The imported model contains different package than the current model. Cannot import model.</value>
  </data>
  <data name="ErrorOlderModel" xml:space="preserve">
    <value>The model being imported is older than the current model. Cannot import model.</value>
  </data>
  <data name="MultipleConstantsWithSameName" xml:space="preserve">
    <value>Multiple constants with the same name "{0}" are present in the model. Model needs to be adjusted.</value>
  </data>
  <data name="ErrorDeploymentSorterInputOutputCountMismatch" xml:space="preserve">
    <value>Number of input and output deployments doesn't match</value>
    <comment>Thrown when after sorting the count differs from input size.</comment>
  </data>
  <data name="ErrorDeploymentDependsOnItself" xml:space="preserve">
    <value>Deployment version: {0} of package: {1} depends on itself! Remove the dependency to continue.</value>
    <comment>Thrown when a deployment version depends on itself.</comment>
  </data>
  <data name="ErrorInfiniteLoopNoDependencies" xml:space="preserve">
    <value>Infinite loop! Could not find any deployments without active dependencies.</value>
    <comment>Emitted when sorting cannot progress due to all having active dependencies.</comment>
  </data>
  <data name="DeploymentDeadlockHeader" xml:space="preserve">
    <value>Deployment version order could not be determined, because circular
dependencies were detected among some deployment versions.
Successfully ordered deployment versions:
{0}
The sorting process failed with these deployment versions as the next step candidates:
{1}
</value>
    <comment>Header for deployment deadlock message with ordered list and next candidates.</comment>
  </data>
  <data name="DeploymentDeadlockPrereqConflicts" xml:space="preserve">
    <value>The following deployments would not be able to run later because they
depend on other deployments from the current step.That is why the sorting cannot progress any further.
{0}
</value>
    <comment>Section appended when prerequisite conflicts are detected.</comment>
  </data>
  <data name="DeploymentDeadlockCandidateFormat" xml:space="preserve">
    <value>Candidate: {0} {1}
	Dependencies:
		{2}</value>
    <comment>Format for a candidate block in deadlock message.</comment>
  </data>
  <data name="DeploymentDeadlockBlockerFormat" xml:space="preserve">
    <value>Blocker: {0} {1}
	Dependencies:
		{2}</value>
    <comment>Format for a blocker block in deadlock message.</comment>
  </data>
  <data name="DeploymentDeadlockHint" xml:space="preserve">
    <value>The deployment dependencies are broken. The only way to fix them now is to examine the individual deployment scripts in Architect, determine the correct execution order, and then update the deploymentDependenciesCsv elements in the respective .origam files of the conflicting DeploymentVersions.</value>
  </data>
</root>